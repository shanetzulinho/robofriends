{"version":3,"sources":["components/Scroll.js","components/Card.js","components/CardList.js","components/SearchBox.js","containers/App.js","reportWebVitals.js","index.js"],"names":["Scroll","props","react_default","a","createElement","style","overflowY","border","height","children","Card","_ref","id","name","email","className","alt","src","concat","CardList","robots","map","uses","index","components_Card","key","SearchBox","searchChange","type","placeholder","onChange","App","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","onSearchChange","event","setState","searchfield","target","value","state","_this2","fetch","then","response","json","users","_this$state","filteredRobots","filter","robot","toLowerCase","includes","length","components_SearchBox","components_Scroll","components_CardList","Component","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","src_containers_App"],"mappings":"yNAQeA,EANA,SAACC,GACZ,OACIC,EAAAC,EAAAC,cAAA,OAAKC,MAAO,CAACC,UAAW,SAAUC,OAAQ,kBAAmBC,OAAQ,UAAWP,EAAMQ,WCW/EC,EAbF,SAAAC,GAAyB,IAAtBC,EAAsBD,EAAtBC,GAAIC,EAAkBF,EAAlBE,KAAMC,EAAYH,EAAZG,MAEtB,OACIZ,EAAAC,EAAAC,cAAA,OAAKW,UAAU,uDACXb,EAAAC,EAAAC,cAAA,OAAKY,IAAI,QAAQC,IAAG,wBAAAC,OAA0BN,EAA1B,cACpBV,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,UAAKS,GACLX,EAAAC,EAAAC,cAAA,SAAIU,MCYLK,EAlBE,SAAAR,GAAgB,IAAbS,EAAaT,EAAbS,OAChB,OACIlB,EAAAC,EAAAC,cAAA,WAEQgB,EAAOC,IAAI,SAACC,EAAMC,GACd,OAASrB,EAAAC,EAAAC,cAACoB,EAAD,CACDC,IAAKL,EAAOG,GAAOX,GACnBA,GAAIQ,EAAOG,GAAOX,GAClBC,KAAMO,EAAOG,GAAOV,KACpBC,MAAOM,EAAOG,GAAOT,YCGlCY,EAbG,SAAAf,GAAoB,IAAlBgB,EAAkBhB,EAAlBgB,aAChB,OACIzB,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,SACIW,UAAU,uCACVa,KAAK,SACLC,YAAY,gBACZC,SAAUH,MCoCXI,qBAtCX,SAAAA,IAAc,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAJ,IACVC,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAF,GAAAO,KAAAH,QAaJI,eAAiB,SAACC,GACdR,EAAKS,SAAS,CAAEC,YAAaF,EAAMG,OAAOC,SAb1CZ,EAAKa,MAAQ,CACTzB,OAAQ,GACRsB,YAAa,IAJPV,mFAQM,IAAAc,EAAAX,KAChBY,MAAM,8CACDC,KAAK,SAAAC,GAAQ,OAAIA,EAASC,SAC1BF,KAAK,SAAAG,GAAK,OAAIL,EAAKL,SAAS,CAACrB,OAAQ+B,uCAOrC,IAAAC,EAC2BjB,KAAKU,MAA7BzB,EADHgC,EACGhC,OAAQsB,EADXU,EACWV,YACVW,EAAiBjC,EAAOkC,OAAO,SAAAC,GACjC,OAAOA,EAAM1C,KAAK2C,cAAcC,SAASf,EAAYc,iBAGzD,OAAQpC,EAAOsC,OAGXxD,EAAAC,EAAAC,cAAA,OAAMW,UAAU,MACZb,EAAAC,EAAAC,cAAA,MAAIW,UAAU,MAAd,eACAb,EAAAC,EAAAC,cAACuD,EAAD,CAAWhC,aAAcQ,KAAKI,iBAC9BrC,EAAAC,EAAAC,cAACwD,EAAD,KACI1D,EAAAC,EAAAC,cAACyD,EAAD,CAAUzC,OAAQiC,MAN9BnD,EAAAC,EAAAC,cAAA,MAAIW,UAAU,SAAd,kBA1BU+C,cCMHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxCC,EAAAC,EAAA,GAAAnB,KAAAkB,EAAAE,KAAA,UAAqBpB,KAAK,SAAArC,GAAiD,IAA9C0D,EAA8C1D,EAA9C0D,OAAQC,EAAsC3D,EAAtC2D,OAAQC,EAA8B5D,EAA9B4D,OAAQC,EAAsB7D,EAAtB6D,OAAQC,EAAc9D,EAAd8D,QAC3DJ,EAAOL,GACPM,EAAON,GACPO,EAAOP,GACPQ,EAAOR,GACPS,EAAQT,YCEDU,IAASC,WAAWC,SAASC,eAAe,SACpDC,OAAO5E,EAAAC,EAAAC,cAAC2E,EAAD,OAKZhB","file":"static/js/main.35c2d0b9.chunk.js","sourcesContent":["import React from 'react';\n\nconst Scroll = (props) => {\n    return (\n        <div style={{overflowY: 'scroll', border: '1px solid black', height: '800px'}}>{props.children}</div>\n    );\n};\n\nexport default Scroll;","import React from 'react';\n\nconst Card = ({ id, name, email }) => {\n    // const {id, name, email} = props;\n    return (\n        <div className='tc bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5'>\n            <img alt='Robot' src={`https://robohash.org/${id}?200x200`} />\n            <div>\n                <h2>{name}</h2>\n                <p>{email}</p>\n            </div>\n        </div>\n    );\n}\n\nexport default Card;","import React from 'react';\nimport Card from './Card';\n\nconst CardList = ({ robots }) => {\n    return (\n        <div>\n            {\n                robots.map((uses, index) => {\n                    return ( <Card \n                            key={robots[index].id}\n                            id={robots[index].id}\n                            name={robots[index].name}\n                            email={robots[index].email}\n                        />\n                    );\n                })\n            }\n        </div>\n    );\n}\n\nexport default CardList;","import React from 'react';\n\nconst SearchBox = ({searchChange}) => {\n    return (\n        <div>\n            <input \n                className='ma2 pa3 ba b--green bg-lightest-blud' \n                type='search'\n                placeholder='search robots'\n                onChange={searchChange}\n            />\n        </div>\n    );\n}\n\nexport default SearchBox;","import React, { Component } from 'react';\nimport Scroll from '../components/Scroll';\nimport CardList from '../components/CardList';\nimport SearchBox from '../components/SearchBox';\nimport '../containers/App.css';\n\nclass App extends Component {\n    constructor() {\n        super();\n        this.state = {\n            robots: [],\n            searchfield: ''\n        }\n    }\n\n    componentDidMount() {\n        fetch('https://jsonplaceholder.typicode.com/users')\n            .then(response => response.json())\n            .then(users => this.setState({robots: users}))\n    }\n\n    onSearchChange = (event) => {\n        this.setState({ searchfield: event.target.value });\n    }\n\n    render() {\n        const { robots, searchfield } = this.state;\n        const filteredRobots = robots.filter(robot => {\n            return robot.name.toLowerCase().includes(searchfield.toLowerCase());\n        });\n\n        return !robots.length ?\n        <h1 className='f1 tc'>LOADING</h1> :\n        (\n            <div  className='tc'>\n                <h1 className='f1'>RoboFriends</h1>\n                <SearchBox searchChange={this.onSearchChange}/>\n                <Scroll>\n                    <CardList robots={filteredRobots} />\n                </Scroll>\n            </div>\n        );\n    }\n}\n\nexport default App","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './containers/App';\n\n\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(<App />);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}